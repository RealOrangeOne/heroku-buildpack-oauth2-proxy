#!/usr/bin/env bash

set -e

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
BUILD_DIR=$1
CACHE_DIR=$2

GOHOME=$CACHE_DIR/.gohome
export GOROOT=$GOHOME/go
export GOPATH=$CACHE_DIR/go
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH

mkdir -p $GOROOT/bin
cd $GOHOME

echo "downloading golang..."
curl -O  https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz
tar -xvf go1.8.3.linux-amd64.tar.gz

# write out a start script
cat <<EOF > ${BUILD_DIR}/start-oauth2-proxy.sh
#!/usr/bin/env bash

set -e

if [ -z \${PORT+x} ]; then echo "please set PORT"; exit; fi
if [ -z \${COOKIE_DOMAIN+x} ]; then echo "please set COOKIE_DOMAIN"; exit; fi
if [ -z \${PROVIDER+x} ]; then echo "please set PROVIDER"; exit; fi
if [ -z \${APP+x} ]; then echo "please set APP"; exit; fi
if [ -z \${OAUTH2_PROXY_CLIENT_ID+x} ]; then echo "please set OAUTH2_PROXY_CLIENT_ID"; exit; fi
if [ -z \${OAUTH2_PROXY_CLIENT_SECRET+x} ]; then echo "please set OAUTH2_PROXY_CLIENT_SECRET"; exit; fi
if [ -z \${OAUTH2_PROXY_COOKIE_SECRET+x} ]; then echo "please set OAUTH2_PROXY_COOKIE_SECRET"; exit; fi

echo "starting oauth2_proxy..."
oauth2_proxy  \
--http-address=http://:\$PORT \
--cookie-domain=\${COOKIE_DOMAIN} \
--provider="\${PROVIDER}" \
--email-domain="*" \
--redirect-url=\${APP}/oauth2/callback \
--set-xauthrequest=true \
--pass-access-token=true \
--upstream=https://127.0.0.1:8080 &
EOF

chmod +x ${BUILD_DIR}/start-oauth2-proxy.sh

echo "-----> Installed GoLang1.8.3"

which go

echo "grabbing oauth2_proxy..."

go get github.com/pallavkothari/oauth2_proxy

echo "got it"

cp $GOROOT/bin/oauth2_proxy $BUILD_DIR
